<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>huboo&#39;s blog</title>
  <icon>https://www.gravatar.com/avatar/9497662543e90ab59345cb8213b7e8bb</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://huboo.club/"/>
  <updated>2020-01-08T09:27:08.022Z</updated>
  <id>https://huboo.club/</id>
  
  <author>
    <name>huboo</name>
    <email>huboo82@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Build your own API endpoint with Apollo GraphQL</title>
    <link href="https://huboo.club/2019/11/build-api-endpoint-with-apollo-graphql.html"/>
    <id>https://huboo.club/2019/11/build-api-endpoint-with-apollo-graphql.html</id>
    <published>2019-11-27T11:38:12.000Z</published>
    <updated>2020-01-08T09:27:08.022Z</updated>
    
    <content type="html"><![CDATA[<h3 id="The-beginning">The beginning</h3><p>Nowadays to a F2E’s(aka. Front End Engineer) skills are way more complex than 3 or 4 years ago, you can’t just know how to process a bunch of PSDs into html but also have to make your pages works together, especially when you are creating a Web APP.</p><p>To make an APP work we’ll need the API endpoint to provide necessary data so F2E can display/manipulate them and make APP alive.<br>Here I’ll demonstrate of how to use GraphQL to create the endpoint, it’s a bit related to backend stuff but no worries.</p><h3 id="Preparation">Preparation</h3><ul><li>Nodejs@^8.15.1</li><li>ES6 syntax knowledge</li><li>nodemon (optional)</li><li>Packages<ul><li>apollo-server-express@^2.9.7</li><li>express@^4.17.1</li><li>faker@^4.1.0</li><li>graphql-tools@^4.0.6</li><li>morgan@^1.9.1</li></ul></li></ul><h3 id="Initial-a-NPM-project">Initial a NPM project</h3><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; md example &amp;&amp; <span class="string">"<span class="variable">$_</span>"</span></span><br><span class="line">&gt; npm init</span><br><span class="line">&gt; npm install apollo-server-express express faker graphql-tools morgan</span><br></pre></td></tr></table></figure><p>Install packages and let’s check the directory structures:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">├── src</span><br><span class="line">│   ├── app</span><br><span class="line">│   │   ├── apollo.js</span><br><span class="line">│   │   └── server.js</span><br><span class="line">│   └── schemas</span><br><span class="line">│       ├── index.js</span><br><span class="line">│       ├── user.js</span><br><span class="line">│       ├── ...</span><br></pre></td></tr></table></figure><p>We have a folder named <strong><em>app</em></strong> and a folder named <strong><em>schemas</em></strong> there will be our codes’ houses then.</p><h3 id="Coding">Coding</h3><p>Step one, create a server to handle http requests, we are going to use express to do this.</p><p>To use GraphQL in backend we can choose <a href="https://github.com/apollographql/apollo-server/tree/master/packages/apollo-server-express" rel="external nofollow noopener noreferrer" target="_blank">Apollo Server</a>, it is a community-maintained open-source GraphQL server, and its example to Express is sample but for the reason of decoupling to modules we will have one <strong><em>apollo.js</em></strong> and another is <strong><em>server.js</em></strong>.</p><p>As you can see we have decoupled apollo part to <strong><em>apollo.js</em></strong>, in this file we only configure express:</p><ul><li>Use an express plugin called morgan to display server’s log in terminal console.</li><li>Module apollo applied as a middleware to express.</li><li>Server listen to port 4000 and when server start display a log shows server is ready.</li></ul><h4 id="Codesandbox">Codesandbox</h4><iframe  src="https://codesandbox.io/embed/hopeful-banzai-4ex35?fontsize=14&hidenavigation=1&module=%2Fsrc%2Fapp%2Fserver.js&theme=dark"  style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"  title="hopeful-banzai-4ex35"  allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb"  sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm start</span><br><span class="line">&gt; nodemon --watch &quot;src&#x2F;**&#x2F;*.js&quot; --exec node .&#x2F;src&#x2F;app&#x2F;server.js</span><br><span class="line"></span><br><span class="line">[nodemon] 1.19.4</span><br><span class="line">[nodemon] to restart at any time, enter &#96;rs&#96;</span><br><span class="line">[nodemon] watching dir(s): src&#x2F;**&#x2F;*.js</span><br><span class="line">[nodemon] watching extensions: js,mjs,json</span><br><span class="line">[nodemon] starting &#96;node .&#x2F;src&#x2F;app&#x2F;server.js&#96;</span><br><span class="line">🚀 Server ready at http:&#x2F;&#x2F;localhost:4000&#x2F;graphql</span><br></pre></td></tr></table></figure><p>Before we start the server lets finish <strong><em>apollo.js</em></strong> now.</p><p>Hmm, seems nothing special just import modules and export module but let’s remember the context and continue discover folder <strong><em>schemas</em></strong>.</p><h3 id="GraphQL-type-definition-and-resolvers">GraphQL type definition and resolvers.</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> typeDefs = <span class="string">`</span></span><br><span class="line"><span class="string">  type User &#123;</span></span><br><span class="line"><span class="string">    id: String</span></span><br><span class="line"><span class="string">    first_name: String</span></span><br><span class="line"><span class="string">    last_name: String</span></span><br><span class="line"><span class="string">    email(isReplace: Boolean = true): String</span></span><br><span class="line"><span class="string">    gender: String</span></span><br><span class="line"><span class="string">    phone: String</span></span><br><span class="line"><span class="string">    home: Address</span></span><br><span class="line"><span class="string">    work: Address</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  type Address &#123;</span></span><br><span class="line"><span class="string">    postal: String</span></span><br><span class="line"><span class="string">    city: String</span></span><br><span class="line"><span class="string">    street: String</span></span><br><span class="line"><span class="string">    secondary: String</span></span><br><span class="line"><span class="string">    country: String</span></span><br><span class="line"><span class="string">    country_code: String</span></span><br><span class="line"><span class="string">    state: String</span></span><br><span class="line"><span class="string">    state_abbr: String</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  type Query &#123;</span></span><br><span class="line"><span class="string">    users(count: Int): [User]</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br></pre></td></tr></table></figure><p>In GraphQL type definition we create two custom types named <strong><em>User</em></strong> and <strong><em>Address</em></strong> and Query is the default type every typeDefs need one.</p><p>We add fields to each type and restrict its value as String or <strong><em>Address</em></strong> so we know filed can be a custom type and its value will be the custom type’s fields as an Object.</p><p>Also the filed could have arguments and be restricted.</p><p>For the default Query type we also have a field <strong><em>users</em></strong> and the value is a list of <strong><em>User</em></strong>. This filed will return users we have and could be an array of object/null or null because we don’t restrict the list or User to be required which represent in code would be <code>[User]!</code> Or <code>[User!]</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; always, replace, when &#125; = <span class="built_in">require</span>(<span class="string">'ramda'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> resolvers = &#123;</span><br><span class="line">  Query: &#123;</span><br><span class="line">    users: <span class="function">(<span class="params">parent, &#123; count = <span class="number">10</span> &#125;, &#123; faker &#125;</span>) =&gt;</span></span><br><span class="line">      <span class="keyword">new</span> <span class="built_in">Array</span>(count).fill().map(<span class="function"><span class="params">()</span> =&gt;</span> (&#123;</span><br><span class="line">        id: faker.random.uuid(),</span><br><span class="line">        first_name: faker.name.firstName(),</span><br><span class="line">        last_name: faker.name.lastName(),</span><br><span class="line">        email: <span class="function">(<span class="params">&#123; isReplace &#125;</span>) =&gt;</span></span><br><span class="line">          when(always(isReplace), replace(<span class="string">'@'</span>, <span class="string">' AT '</span>))(faker.internet.email()),</span><br><span class="line">        gender: faker.random.arrayElement([<span class="string">'female'</span>, <span class="string">'male'</span>]),</span><br><span class="line">        phone: faker.phone.phoneNumber(),</span><br><span class="line">        home: <span class="function"><span class="params">()</span> =&gt;</span> (&#123;</span><br><span class="line">          postal: faker.address.zipCode(),</span><br><span class="line">          city: faker.address.city(),</span><br><span class="line">          street: faker.address.streetAddress(),</span><br><span class="line">          secondary: faker.address.secondaryAddress(),</span><br><span class="line">          country: faker.address.country(),</span><br><span class="line">          country_code: faker.address.countryCode(),</span><br><span class="line">          state: faker.address.state(),</span><br><span class="line">          state_abbr: faker.address.stateAbbr(),</span><br><span class="line">        &#125;),</span><br><span class="line">      &#125;)),</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Look at <strong><em>resolvers</em></strong> carefully isn’t it an Object to you, it has a key named Query and a sub-key named users like the type we defined in <strong><em>typeDefs</em></strong>, the function of users will be the resolver for generating users data – an array of objects.</p><p>Loot at the function’s parameters, the second one comes from request variables the third one comes from apollo-server’s <strong><em>context</em></strong> we pass before.</p><h3 id="Playground">Playground</h3><p>Now start server by</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm start</span><br></pre></td></tr></table></figure><p>And using these queries to get your users.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">query Users($count: Int!, $isReplace: Boolean)&#123;</span><br><span class="line">  users(count: $count) &#123;</span><br><span class="line">    first_name</span><br><span class="line">    last_name</span><br><span class="line">    email(isReplace: $isReplace)</span><br><span class="line">    gender</span><br><span class="line">    phone</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Have fun with them!</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;The-beginning&quot;&gt;The beginning&lt;/h3&gt;
&lt;p&gt;Nowadays to a F2E’s(aka. Front End Engineer) skills are way more complex than 3 or 4 years ago, you can’t just know how to process a bunch of PSDs into html but also have to make your pages works together, especially when you are creating a Web APP.&lt;/p&gt;
&lt;p&gt;To make an APP work we’ll need the API endpoint to provide necessary data so F2E can display/manipulate them and make APP alive.&lt;br&gt;
Here I’ll demonstrate of how to use GraphQL to create the endpoint, it’s a bit related to backend stuff but no worries.&lt;/p&gt;
&lt;h3 id=&quot;Preparation&quot;&gt;Preparation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Nodejs@^8.15.1&lt;/li&gt;
&lt;li&gt;ES6 syntax knowledge&lt;/li&gt;
&lt;li&gt;nodemon (optional)&lt;/li&gt;
&lt;li&gt;Packages
&lt;ul&gt;
&lt;li&gt;apollo-server-express@^2.9.7&lt;/li&gt;
&lt;li&gt;express@^4.17.1&lt;/li&gt;
&lt;li&gt;faker@^4.1.0&lt;/li&gt;
&lt;li&gt;graphql-tools@^4.0.6&lt;/li&gt;
&lt;li&gt;morgan@^1.9.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Initial-a-NPM-project&quot;&gt;Initial a NPM project&lt;/h3&gt;
    
    </summary>
    
    
      <category term="GraphQL" scheme="https://huboo.club/archives/category/graphql/"/>
    
    
      <category term="pld" scheme="https://huboo.club/archives/tag/pld/"/>
    
      <category term="nodejs" scheme="https://huboo.club/archives/tag/nodejs/"/>
    
      <category term="graphql" scheme="https://huboo.club/archives/tag/graphql/"/>
    
      <category term="express" scheme="https://huboo.club/archives/tag/express/"/>
    
      <category term="apollo-server" scheme="https://huboo.club/archives/tag/apollo-server/"/>
    
  </entry>
  
  <entry>
    <title>React Apollo Hooks Testing in Real World</title>
    <link href="https://huboo.club/2019/10/react-hooks-testing-of-react-apollo.html"/>
    <id>https://huboo.club/2019/10/react-hooks-testing-of-react-apollo.html</id>
    <published>2019-10-24T10:11:11.000Z</published>
    <updated>2020-01-08T09:32:18.913Z</updated>
    
    <content type="html"><![CDATA[<h3 id="A-Real-World-hooks-and-hooks-test">A Real World hooks and hooks test</h3><p>I am using <a href="https://countries.trevorblades.com/" rel="external nofollow noopener noreferrer" target="_blank">countries.trevorblades.com</a> to query data and you can find other possible public graphql endpoints <a href="https://countries.trevorblades.com/" rel="external nofollow noopener noreferrer" target="_blank">here</a>.</p><p>I’ve made a <a href="https://codesandbox.io/s/react-apollo-hooks-with-mutation-test-n5xew" rel="external nofollow noopener noreferrer" target="_blank">codesandbox</a> but it’s not working in it please take in the local env to run.</p><p>FYI: Since the endpoint only provide Query so only <em>useQuery</em> hooks test is real but the <em>useMutation</em> is only for testing.</p><a id="more"></a><p>First we need to wrap components into ApolloProvider</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ApolloProvider &#125; <span class="keyword">from</span> <span class="string">'react-apollo'</span>;</span><br><span class="line"><span class="keyword">import</span> ApolloClient <span class="keyword">from</span> <span class="string">'apollo-boost'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; InMemoryCache &#125; <span class="keyword">from</span> <span class="string">'apollo-cache-inmemory'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./index.css'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cache = <span class="keyword">new</span> InMemoryCache();</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://apis.guru/graphql-apis/</span></span><br><span class="line"><span class="keyword">const</span> client = <span class="keyword">new</span> ApolloClient(&#123;</span><br><span class="line">    uri: <span class="string">'https://countries.trevorblades.com/'</span>,</span><br><span class="line">    cache,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">    &lt;ApolloProvider client=&#123;client&#125;&gt;</span><br><span class="line">        &lt;App /&gt;</span><br><span class="line">    &lt;<span class="regexp">/ApolloProvider&gt;,</span></span><br><span class="line"><span class="regexp">    document.getElementById('root')</span></span><br><span class="line"><span class="regexp">);</span></span><br></pre></td></tr></table></figure><p>Then create a component to get continents data from endpoint and display</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Continents.js</span></span><br><span class="line"><span class="keyword">import</span> React, &#123; memo, useState &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useContinents, useContinentByCode &#125; <span class="keyword">from</span> <span class="string">'./hooks/useContinents'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ContinentByCode = memo(<span class="function">(<span class="params">&#123; code &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; continent &#125; = &#123;&#125;, loading &#125; = useContinentByCode(code);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (loading) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Loading...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        &lt;&gt;</span><br><span class="line">            &lt;div&gt;Selected: &#123;continent.name&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div&gt;Countries&lt;/</span>div&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &#123;continent.countries.map(<span class="function">(<span class="params">&#123; name &#125;, index</span>) =&gt;</span> (</span><br><span class="line">                    &lt;li key=&#123;index&#125;&gt;&#123;name&#125;&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">                ))&#125;</span></span><br><span class="line"><span class="regexp">            &lt;/u</span>l&gt;</span><br><span class="line">        &lt;<span class="regexp">/&gt;</span></span><br><span class="line"><span class="regexp">    )</span></span><br><span class="line"><span class="regexp">&#125;)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default memo(() =&gt; &#123;</span></span><br><span class="line"><span class="regexp">    const &#123; data: &#123; continents &#125; = &#123;&#125;, loading, error &#125; = useContinents();</span></span><br><span class="line"><span class="regexp">    const [continentCode, setContinentCode] = useState(null);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    if (loading) &#123;</span></span><br><span class="line"><span class="regexp">        return &lt;p&gt;Loading...&lt;/</span>p&gt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Error in request graphql.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        &lt;div className=<span class="string">"App-Continents-container"</span>&gt;</span><br><span class="line">            &lt;div className=<span class="string">"App-Continents"</span>&gt;</span><br><span class="line">                &#123;continents.map(<span class="function">(<span class="params">&#123; code, name &#125;, index</span>) =&gt;</span> (</span><br><span class="line">                    &lt;div key=&#123;index&#125;&gt;</span><br><span class="line">                        &#123;code === continentCode ? name : <span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> setContinentCode(code)&#125;&gt;&#123;name&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span>&#125;</span><br><span class="line">                    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">                ))&#125;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>div&gt;</span><br><span class="line">            &#123;continentCode &amp;&amp; (</span><br><span class="line">                &lt;ContinentByCode code=&#123;continentCode&#125; /&gt;</span><br><span class="line">            )&#125;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    )</span></span><br><span class="line"><span class="regexp">&#125;)</span></span><br></pre></td></tr></table></figure><p>Now the apollo hooks</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hooks/useContinents.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; useQuery &#125; <span class="keyword">from</span> <span class="string">'react-apollo'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; loader &#125; <span class="keyword">from</span> <span class="string">'graphql.macro'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> queryContinents = loader(<span class="string">'src/queries/Continents.graphql'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> queryContinent = loader(<span class="string">'src/queries/ContinentByCode.graphql'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useContinents = <span class="function"><span class="params">()</span> =&gt;</span> useQuery(queryContinents);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useContinentByCode = <span class="function"><span class="params">code</span> =&gt;</span> useQuery(queryContinent, &#123; <span class="attr">variables</span>: &#123; code &#125; &#125;);</span><br></pre></td></tr></table></figure><p>Maybe try in the browser see if the app can run and give you seven continents.</p><blockquote><p>npm start</p></blockquote><h3 id="useQuery-hooks-test">useQuery hooks test</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="comment">// use MockedProvider to wrap component to provide mock data to components which using apollo hooks</span></span><br><span class="line"><span class="keyword">import</span> &#123; MockedProvider &#125; <span class="keyword">from</span> <span class="string">'@apollo/react-testing'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; renderHook &#125; <span class="keyword">from</span> <span class="string">'@testing-library/react-hooks'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; loader &#125; <span class="keyword">from</span> <span class="string">'graphql.macro'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useContinents, useContinentByCode &#125; <span class="keyword">from</span> <span class="string">'./useContinents'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> queryContinents = loader(<span class="string">'src/queries/Continents.graphql'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> queryContinent = loader(<span class="string">'src/queries/ContinentByCode.graphql'</span>);</span><br><span class="line"></span><br><span class="line">describe(<span class="string">'useContinents'</span>, () =&gt; &#123;</span><br><span class="line">    it(<span class="string">'get all continents'</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> data = &#123;</span><br><span class="line">            continents: [</span><br><span class="line">                &#123;</span><br><span class="line">                    code: <span class="string">'foo'</span>,</span><br><span class="line">                    name: <span class="string">'bar'</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">            ],</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> mocks = [</span><br><span class="line">            &#123;</span><br><span class="line">                request: &#123; <span class="attr">query</span>: queryContinents &#125;,</span><br><span class="line">                result: &#123; data &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> wrapper = <span class="function">(<span class="params">&#123; children &#125;</span>) =&gt;</span> (</span><br><span class="line">            <span class="comment">// addTypename false will not return __typename</span></span><br><span class="line">            <span class="comment">// so don't need to add __typename in mock data</span></span><br><span class="line">            &lt;MockedProvider mocks=&#123;mocks&#125; addTypename=&#123;<span class="literal">false</span>&#125;&gt;&#123;children&#125;&lt;<span class="regexp">/MockedProvider&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ use renderHook to render hook only and test result</span></span><br><span class="line"><span class="regexp">        const &#123; result, waitForNextUpdate &#125; = renderHook(() =&gt; useContinents(), &#123;</span></span><br><span class="line"><span class="regexp">            wrapper,</span></span><br><span class="line"><span class="regexp">        &#125;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        expect(result.current.loading).toBe(true);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ for async result</span></span><br><span class="line"><span class="regexp">        await waitForNextUpdate();</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        expect(result.current.data).toEqual(expect.objectContaining(data));</span></span><br><span class="line"><span class="regexp">    &#125;)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    it('get continent "FOO" all countries', async () =&gt; &#123;</span></span><br><span class="line"><span class="regexp">        const data = &#123;</span></span><br><span class="line"><span class="regexp">            continent: &#123;</span></span><br><span class="line"><span class="regexp">                code: 'FOO',</span></span><br><span class="line"><span class="regexp">                name: 'bar',</span></span><br><span class="line"><span class="regexp">                countries: [</span></span><br><span class="line"><span class="regexp">                    &#123;</span></span><br><span class="line"><span class="regexp">                        code: 'foo1',</span></span><br><span class="line"><span class="regexp">                        name: 'foo1.bar',</span></span><br><span class="line"><span class="regexp">                        continent: &#123;</span></span><br><span class="line"><span class="regexp">                            name: 'bar',</span></span><br><span class="line"><span class="regexp">                            __typename: 'Continent'</span></span><br><span class="line"><span class="regexp">                        &#125;,</span></span><br><span class="line"><span class="regexp">                        languages: [</span></span><br><span class="line"><span class="regexp">                            &#123;</span></span><br><span class="line"><span class="regexp">                                code: 'fooo',</span></span><br><span class="line"><span class="regexp">                                name: 'Barr',</span></span><br><span class="line"><span class="regexp">                                __typename: 'Language'</span></span><br><span class="line"><span class="regexp">                            &#125;</span></span><br><span class="line"><span class="regexp">                        ],</span></span><br><span class="line"><span class="regexp">                        native: 'foo.bar',</span></span><br><span class="line"><span class="regexp">                        phone: '123',</span></span><br><span class="line"><span class="regexp">                        __typename: 'Country',</span></span><br><span class="line"><span class="regexp">                    &#125;</span></span><br><span class="line"><span class="regexp">                ],</span></span><br><span class="line"><span class="regexp">                __typename: 'Continent'</span></span><br><span class="line"><span class="regexp">            &#125;,</span></span><br><span class="line"><span class="regexp">        &#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const mocks = [</span></span><br><span class="line"><span class="regexp">            &#123;</span></span><br><span class="line"><span class="regexp">                request: &#123;</span></span><br><span class="line"><span class="regexp">                    query: queryContinent,</span></span><br><span class="line"><span class="regexp">                    variables: &#123;</span></span><br><span class="line"><span class="regexp">                        code: 'FOO',</span></span><br><span class="line"><span class="regexp">                    &#125;,</span></span><br><span class="line"><span class="regexp">                &#125;,</span></span><br><span class="line"><span class="regexp">                result: &#123; data &#125;,</span></span><br><span class="line"><span class="regexp">            &#125;,</span></span><br><span class="line"><span class="regexp">        ];</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const wrapper = (&#123; children &#125;) =&gt; (</span></span><br><span class="line"><span class="regexp">            &lt;MockedProvider mocks=&#123;mocks&#125;&gt;&#123;children&#125;&lt;/</span>MockedProvider&gt;</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> &#123; result, waitForNextUpdate &#125; = renderHook(<span class="function"><span class="params">()</span> =&gt;</span> useContinentByCode(<span class="string">'FOO'</span>), &#123;</span><br><span class="line">            wrapper,</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        expect(result.current.loading).toBe(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> waitForNextUpdate();</span><br><span class="line"></span><br><span class="line">        expect(result.current.data).toEqual(expect.objectContaining(data));</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Next part will be useMutation testing.</p><p><a href="/2019/10/react-hooks-testing-of-react-apollo-mutation.html" data-pjax="">Part II</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;A-Real-World-hooks-and-hooks-test&quot;&gt;A Real World hooks and hooks test&lt;/h3&gt;
&lt;p&gt;I am using &lt;a href=&quot;https://countries.trevorblades.com/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;countries.trevorblades.com&lt;/a&gt; to query data and you can find other possible public graphql endpoints &lt;a href=&quot;https://countries.trevorblades.com/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I’ve made a &lt;a href=&quot;https://codesandbox.io/s/react-apollo-hooks-with-mutation-test-n5xew&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;codesandbox&lt;/a&gt; but it’s not working in it please take in the local env to run.&lt;/p&gt;
&lt;p&gt;FYI: Since the endpoint only provide Query so only &lt;em&gt;useQuery&lt;/em&gt; hooks test is real but the &lt;em&gt;useMutation&lt;/em&gt; is only for testing.&lt;/p&gt;
    
    </summary>
    
    
      <category term="React" scheme="https://huboo.club/archives/category/react/"/>
    
    
      <category term="pld" scheme="https://huboo.club/archives/tag/pld/"/>
    
      <category term="react" scheme="https://huboo.club/archives/tag/react/"/>
    
      <category term="hooks" scheme="https://huboo.club/archives/tag/hooks/"/>
    
      <category term="testing" scheme="https://huboo.club/archives/tag/testing/"/>
    
      <category term="apollo" scheme="https://huboo.club/archives/tag/apollo/"/>
    
      <category term="graphql" scheme="https://huboo.club/archives/tag/graphql/"/>
    
      <category term="mutation" scheme="https://huboo.club/archives/tag/mutation/"/>
    
  </entry>
  
  <entry>
    <title>React Apollo Hooks Testing in Real World - Mutation</title>
    <link href="https://huboo.club/2019/10/react-hooks-testing-of-react-apollo-mutation.html"/>
    <id>https://huboo.club/2019/10/react-hooks-testing-of-react-apollo-mutation.html</id>
    <published>2019-10-24T10:10:30.000Z</published>
    <updated>2020-01-08T09:29:11.260Z</updated>
    
    <content type="html"><![CDATA[<p><a href="/2019/10/react-hooks-testing-of-react-apollo.html" data-pjax="">Part I</a></p><h3 id="A-Real-World-hooks-and-hooks-test-part-II-useMutation">A Real World hooks and hooks test part II - useMutation</h3><p>I am using <a href="https://countries.trevorblades.com/" rel="external nofollow noopener noreferrer" target="_blank">countries.trevorblades.com</a> to query data and you can find other possible public graphql endpoints <a href="https://countries.trevorblades.com/" rel="external nofollow noopener noreferrer" target="_blank">here</a>.</p><p>I’ve made a <a href="https://codesandbox.io/s/react-apollo-hooks-with-mutation-test-n5xew" rel="external nofollow noopener noreferrer" target="_blank">codesandbox</a> but it’s not working in it please take in the local env to run.</p><p>FYI: Since the endpoint only provide Query so only <em>useQuery</em> hooks test is real but the <em>useMutation</em> is only for testing.</p><a id="more"></a><h3 id="Mutation-is-CUD">Mutation is CUD</h3><p>Mutation is Creating, Updating and Deleting, you don’t need a backend database but <a href="https://github.com/notrab/fakerql" rel="external nofollow noopener noreferrer" target="_blank">fake the response</a>. To fake the response thats when you define the graphql schema and use resolver to fake and schema part is out of this post’s scope.</p><h3 id="Mutation-hooks">Mutation hooks</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useMutation &#125; <span class="keyword">from</span> <span class="string">'react-apollo'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; loader &#125; <span class="keyword">from</span> <span class="string">'graphql.macro'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Continent = loader(<span class="string">'src/queries/Continents.graphql'</span>);</span><br><span class="line"><span class="keyword">const</span> AddContinent = loader(<span class="string">'src/queries/AddContinent.graphql'</span>);</span><br><span class="line"><span class="keyword">const</span> UpdateContinent = loader(<span class="string">'src/queries/UpdateContinent.graphql'</span>);</span><br><span class="line"><span class="keyword">const</span> RemoveContinent = loader(<span class="string">'src/queries/RemoveContinent.graphql'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useAddContinent = <span class="function"><span class="params">()</span> =&gt;</span> useMutation(AddContinent, &#123;</span><br><span class="line">    update: <span class="function">(<span class="params">cache, &#123; data: &#123; addContinent: continent &#125; &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; continents &#125; = cache.readQuery(&#123; <span class="attr">query</span>: Continent &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// add just added continent to cache</span></span><br><span class="line">        continents.push(continent);</span><br><span class="line"></span><br><span class="line">        cache.writeQuery(&#123;</span><br><span class="line">            query: Continent,</span><br><span class="line">            data: &#123; continents &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useUpdateContinent = <span class="function"><span class="params">()</span> =&gt;</span> useMutation(UpdateContinent, &#123;</span><br><span class="line">    update: <span class="function">(<span class="params">cache, &#123; data: &#123; updateContinent: continent &#125; &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; continents &#125; = cache.readQuery(&#123; <span class="attr">query</span>: Continent &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// update continent to cache</span></span><br><span class="line">        continents[continent.index] = continent;</span><br><span class="line"></span><br><span class="line">        cache.writeQuery(&#123;</span><br><span class="line">            query: Continent,</span><br><span class="line">            data: &#123; continents &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useRemoveContinent = <span class="function"><span class="params">()</span> =&gt;</span> useMutation(RemoveContinent, &#123;</span><br><span class="line">    update: <span class="function">(<span class="params">cache, &#123; data: &#123; removeContinent: index &#125; &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; continents &#125; = cache.readQuery(&#123; <span class="attr">query</span>: Continent &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// remove a continent from cache</span></span><br><span class="line">        continents.splice(index, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        cache.writeQuery(&#123;</span><br><span class="line">            query: Continent,</span><br><span class="line">            data: &#123; continents &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Mutation-hooks-tests">Mutation hooks tests</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; InMemoryCache &#125; <span class="keyword">from</span> <span class="string">'apollo-cache-inmemory'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; renderHook &#125; <span class="keyword">from</span> <span class="string">'@testing-library/react-hooks'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; MockedProvider &#125; <span class="keyword">from</span> <span class="string">'@apollo/react-testing'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; loader &#125; <span class="keyword">from</span> <span class="string">'graphql.macro'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useContinents &#125; <span class="keyword">from</span> <span class="string">'./useContinents'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  useAddContinent,</span><br><span class="line">  useUpdateContinent,</span><br><span class="line">  useRemoveContinent,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'./useMutation'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Continents = loader(<span class="string">'src/queries/Continents.graphql'</span>);</span><br><span class="line"><span class="keyword">const</span> AddContinent = loader(<span class="string">'src/queries/AddContinent.graphql'</span>);</span><br><span class="line"><span class="keyword">const</span> UpdateContinent = loader(<span class="string">'src/queries/UpdateContinent.graphql'</span>);</span><br><span class="line"><span class="keyword">const</span> RemoveContinent = loader(<span class="string">'src/queries/RemoveContinent.graphql'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> allContinents = [</span><br><span class="line">    &#123;</span><br><span class="line">        code: <span class="string">'AF'</span>,</span><br><span class="line">        name: <span class="string">'Africa'</span>,</span><br><span class="line">        __typename: <span class="string">'Continent'</span></span><br><span class="line">    &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">describe(<span class="string">'useMutation'</span>, () =&gt; &#123;</span><br><span class="line">    it(<span class="string">'add a continent'</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="comment">// start a mock cache</span></span><br><span class="line">        <span class="keyword">const</span> cache = <span class="keyword">new</span> InMemoryCache().restore(&#123;</span><br><span class="line">            continents: [ ...allContinents ],</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> variables = &#123;</span><br><span class="line">            code: <span class="string">'FOO'</span>,</span><br><span class="line">            name: <span class="string">'FOO.BAR'</span>,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> mocks = [</span><br><span class="line">            &#123;</span><br><span class="line">                request: &#123; <span class="attr">query</span>: Continents &#125;,</span><br><span class="line">                result: &#123;</span><br><span class="line">                    data: &#123;</span><br><span class="line">                        continents: [ ...allContinents ],</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">            request: &#123;</span><br><span class="line">                query: AddContinent,</span><br><span class="line">                variables,</span><br><span class="line">            &#125;,</span><br><span class="line">            result: &#123;</span><br><span class="line">                data: &#123;</span><br><span class="line">                    addContinent: &#123;</span><br><span class="line">                        code: <span class="string">'FOO'</span>,</span><br><span class="line">                        name: <span class="string">'FOO.BAR'</span>,</span><br><span class="line">                        __typename: <span class="string">'Continent'</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> wrapper = <span class="function">(<span class="params">&#123; children &#125;</span>) =&gt;</span> (</span><br><span class="line">            &lt;MockedProvider cache=&#123;cache&#125; mocks=&#123;mocks&#125;&gt;</span><br><span class="line">            &#123;children&#125;</span><br><span class="line">            &lt;<span class="regexp">/MockedProvider&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ run the query first</span></span><br><span class="line"><span class="regexp">        const &#123; waitForNextUpdate: continentsWaitForNextUpdate &#125; = renderHook(</span></span><br><span class="line"><span class="regexp">            () =&gt; useContinents(),</span></span><br><span class="line"><span class="regexp">            &#123;</span></span><br><span class="line"><span class="regexp">                wrapper,</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const &#123; result, waitForNextUpdate &#125; = renderHook(</span></span><br><span class="line"><span class="regexp">            () =&gt; useAddContinent(),</span></span><br><span class="line"><span class="regexp">            &#123;</span></span><br><span class="line"><span class="regexp">                wrapper,</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        await continentsWaitForNextUpdate();</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const [addContinent] = result.current;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ run the add mutation</span></span><br><span class="line"><span class="regexp">        addContinent(&#123; variables &#125;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const [, &#123; loading &#125;] = result.current;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        expect(loading).toBe(true);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        await waitForNextUpdate();</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const [, &#123; data &#125;] = result.current;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        expect(data).toEqual(</span></span><br><span class="line"><span class="regexp">            expect.objectContaining(&#123;</span></span><br><span class="line"><span class="regexp">                addContinent: &#123;</span></span><br><span class="line"><span class="regexp">                    code: 'FOO',</span></span><br><span class="line"><span class="regexp">                    name: 'FOO.BAR',</span></span><br><span class="line"><span class="regexp">                    __typename: 'Continent'</span></span><br><span class="line"><span class="regexp">                &#125;,</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ read the cache after mutation also manipulating cache</span></span><br><span class="line"><span class="regexp">        const results = cache.readQuery(&#123; query: Continents &#125;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        expect(results).toEqual(</span></span><br><span class="line"><span class="regexp">            expect.objectContaining(&#123;</span></span><br><span class="line"><span class="regexp">                continents: [</span></span><br><span class="line"><span class="regexp">                    ...allContinents,</span></span><br><span class="line"><span class="regexp">                    &#123;</span></span><br><span class="line"><span class="regexp">                        code: 'FOO',</span></span><br><span class="line"><span class="regexp">                        name: 'FOO.BAR',</span></span><br><span class="line"><span class="regexp">                        __typename: 'Continent'</span></span><br><span class="line"><span class="regexp">                    &#125;</span></span><br><span class="line"><span class="regexp">                ],</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    it('update a continent', async () =&gt; &#123;</span></span><br><span class="line"><span class="regexp">        const cache = new InMemoryCache().restore(&#123;</span></span><br><span class="line"><span class="regexp">            continents: [ ...allContinents ],</span></span><br><span class="line"><span class="regexp">        &#125;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const variables = &#123;</span></span><br><span class="line"><span class="regexp">            index: 0,</span></span><br><span class="line"><span class="regexp">            code: 'FOO',</span></span><br><span class="line"><span class="regexp">            name: 'FOO.BAR',</span></span><br><span class="line"><span class="regexp">        &#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const mocks = [</span></span><br><span class="line"><span class="regexp">            &#123;</span></span><br><span class="line"><span class="regexp">                request: &#123; query: Continents &#125;,</span></span><br><span class="line"><span class="regexp">                result: &#123;</span></span><br><span class="line"><span class="regexp">                    data: &#123;</span></span><br><span class="line"><span class="regexp">                        continents: [ ...allContinents ],</span></span><br><span class="line"><span class="regexp">                    &#125;,</span></span><br><span class="line"><span class="regexp">                &#125;,</span></span><br><span class="line"><span class="regexp">            &#125;,</span></span><br><span class="line"><span class="regexp">            &#123;</span></span><br><span class="line"><span class="regexp">            request: &#123;</span></span><br><span class="line"><span class="regexp">                query: UpdateContinent,</span></span><br><span class="line"><span class="regexp">                variables,</span></span><br><span class="line"><span class="regexp">            &#125;,</span></span><br><span class="line"><span class="regexp">            result: &#123;</span></span><br><span class="line"><span class="regexp">                data: &#123;</span></span><br><span class="line"><span class="regexp">                    updateContinent: &#123;</span></span><br><span class="line"><span class="regexp">                        index: 0,</span></span><br><span class="line"><span class="regexp">                        code: 'FOO',</span></span><br><span class="line"><span class="regexp">                        name: 'FOO.BAR',</span></span><br><span class="line"><span class="regexp">                        __typename: 'Continent',</span></span><br><span class="line"><span class="regexp">                    &#125;,</span></span><br><span class="line"><span class="regexp">                &#125;,</span></span><br><span class="line"><span class="regexp">            &#125;,</span></span><br><span class="line"><span class="regexp">            &#125;,</span></span><br><span class="line"><span class="regexp">        ];</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const wrapper = (&#123; children &#125;) =&gt; (</span></span><br><span class="line"><span class="regexp">            &lt;MockedProvider cache=&#123;cache&#125; mocks=&#123;mocks&#125;&gt;</span></span><br><span class="line"><span class="regexp">            &#123;children&#125;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>MockedProvider&gt;</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> &#123; <span class="attr">waitForNextUpdate</span>: continentsWaitForNextUpdate &#125; = renderHook(</span><br><span class="line">            () =&gt; useContinents(),</span><br><span class="line">            &#123;</span><br><span class="line">                wrapper,</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> &#123; result, waitForNextUpdate &#125; = renderHook(</span><br><span class="line">            () =&gt; useUpdateContinent(),</span><br><span class="line">            &#123;</span><br><span class="line">                wrapper,</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> continentsWaitForNextUpdate();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> [updateContinent] = result.current;</span><br><span class="line"></span><br><span class="line">        updateContinent(&#123; variables &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> [, &#123; loading &#125;] = result.current;</span><br><span class="line"></span><br><span class="line">        expect(loading).toBe(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> waitForNextUpdate();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> [, &#123; data &#125;] = result.current;</span><br><span class="line"></span><br><span class="line">        expect(data).toEqual(</span><br><span class="line">            expect.objectContaining(&#123;</span><br><span class="line">                updateContinent: &#123;</span><br><span class="line">                    index: <span class="number">0</span>,</span><br><span class="line">                    code: <span class="string">'FOO'</span>,</span><br><span class="line">                    name: <span class="string">'FOO.BAR'</span>,</span><br><span class="line">                    __typename: <span class="string">'Continent'</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> results = cache.readQuery(&#123; <span class="attr">query</span>: Continents &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> updatedContinents = [ ...allContinents ];</span><br><span class="line">        updatedContinents[<span class="number">0</span>] = &#123;</span><br><span class="line">            code: <span class="string">'FOO'</span>,</span><br><span class="line">            name: <span class="string">'FOO.BAR'</span>,</span><br><span class="line">            __typename: <span class="string">'Continent'</span>,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        expect(results).toEqual(</span><br><span class="line">            expect.objectContaining(&#123;</span><br><span class="line">                continents: [</span><br><span class="line">                    ...updatedContinents</span><br><span class="line">                ],</span><br><span class="line">            &#125;)</span><br><span class="line">        );</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    it(<span class="string">'remove a continent'</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> cache = <span class="keyword">new</span> InMemoryCache().restore(&#123;</span><br><span class="line">            continents: [ ...allContinents ],</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> variables = &#123; <span class="attr">index</span>: <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> mocks = [</span><br><span class="line">            &#123;</span><br><span class="line">                request: &#123; <span class="attr">query</span>: Continents &#125;,</span><br><span class="line">                result: &#123;</span><br><span class="line">                    data: &#123;</span><br><span class="line">                        continents: [ ...allContinents ],</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">            request: &#123;</span><br><span class="line">                query: RemoveContinent,</span><br><span class="line">                variables,</span><br><span class="line">            &#125;,</span><br><span class="line">            result: &#123;</span><br><span class="line">                data: &#123;</span><br><span class="line">                    removeContinent: <span class="number">0</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> wrapper = <span class="function">(<span class="params">&#123; children &#125;</span>) =&gt;</span> (</span><br><span class="line">            &lt;MockedProvider cache=&#123;cache&#125; mocks=&#123;mocks&#125;&gt;</span><br><span class="line">            &#123;children&#125;</span><br><span class="line">            &lt;<span class="regexp">/MockedProvider&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const &#123; waitForNextUpdate: continentsWaitForNextUpdate &#125; = renderHook(</span></span><br><span class="line"><span class="regexp">            () =&gt; useContinents(),</span></span><br><span class="line"><span class="regexp">            &#123;</span></span><br><span class="line"><span class="regexp">                wrapper,</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const &#123; result, waitForNextUpdate &#125; = renderHook(</span></span><br><span class="line"><span class="regexp">            () =&gt; useRemoveContinent(),</span></span><br><span class="line"><span class="regexp">            &#123;</span></span><br><span class="line"><span class="regexp">                wrapper,</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        await continentsWaitForNextUpdate();</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const [removeContinent] = result.current;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        removeContinent(&#123; variables &#125;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const [, &#123; loading &#125;] = result.current;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        expect(loading).toBe(true);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        await waitForNextUpdate();</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const [, &#123; data &#125;] = result.current;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        expect(data).toEqual(</span></span><br><span class="line"><span class="regexp">            expect.objectContaining(&#123;</span></span><br><span class="line"><span class="regexp">                removeContinent: 0,</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        const results = cache.readQuery(&#123; query: Continents &#125;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        expect(results).toEqual(</span></span><br><span class="line"><span class="regexp">            expect.objectContaining(&#123;</span></span><br><span class="line"><span class="regexp">                continents: [</span></span><br><span class="line"><span class="regexp">                    ...allContinents.slice(1)</span></span><br><span class="line"><span class="regexp">                ],</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;);</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br></pre></td></tr></table></figure><p>This is the working mutation test can also cover the cache change as long as I know but if you have and good idea please let me know, thank you in advance.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;/2019/10/react-hooks-testing-of-react-apollo.html&quot; data-pjax=&quot;&quot;&gt;Part I&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;A-Real-World-hooks-and-hooks-test-part-II-useMutation&quot;&gt;A Real World hooks and hooks test part II - useMutation&lt;/h3&gt;
&lt;p&gt;I am using &lt;a href=&quot;https://countries.trevorblades.com/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;countries.trevorblades.com&lt;/a&gt; to query data and you can find other possible public graphql endpoints &lt;a href=&quot;https://countries.trevorblades.com/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I’ve made a &lt;a href=&quot;https://codesandbox.io/s/react-apollo-hooks-with-mutation-test-n5xew&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;codesandbox&lt;/a&gt; but it’s not working in it please take in the local env to run.&lt;/p&gt;
&lt;p&gt;FYI: Since the endpoint only provide Query so only &lt;em&gt;useQuery&lt;/em&gt; hooks test is real but the &lt;em&gt;useMutation&lt;/em&gt; is only for testing.&lt;/p&gt;
    
    </summary>
    
    
      <category term="React" scheme="https://huboo.club/archives/category/react/"/>
    
    
      <category term="pld" scheme="https://huboo.club/archives/tag/pld/"/>
    
      <category term="react" scheme="https://huboo.club/archives/tag/react/"/>
    
      <category term="hooks" scheme="https://huboo.club/archives/tag/hooks/"/>
    
      <category term="testing" scheme="https://huboo.club/archives/tag/testing/"/>
    
      <category term="apollo" scheme="https://huboo.club/archives/tag/apollo/"/>
    
      <category term="graphql" scheme="https://huboo.club/archives/tag/graphql/"/>
    
      <category term="mutation" scheme="https://huboo.club/archives/tag/mutation/"/>
    
  </entry>
  
  <entry>
    <title>Implement Blueprintjs Table Infinite Scroll</title>
    <link href="https://huboo.club/2019/08/blueprintjs-table-infinite-scroll.html"/>
    <id>https://huboo.club/2019/08/blueprintjs-table-infinite-scroll.html</id>
    <published>2019-08-15T12:16:45.000Z</published>
    <updated>2020-01-22T05:31:30.738Z</updated>
    
    <content type="html"><![CDATA[<p>Generally we use scroll event to detect if element reach to the threshold edge, or if you are familiar with <a href="/2019/03/intersection-observer.html" target="_blank">Intersection observer</a>.</p><p>Blueprintjs is a complex UI components set for React and in its table API document it doesn’t explicitly provide the infinite scroll feature but we can use this API to approach.</p><h3 id="API">API</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onVisibleCellsChange</span><br><span class="line"></span><br><span class="line">(rowIndices: IRowIndices, columnIndices: IColumnIndices) &#x3D;&gt; void</span><br><span class="line">A callback called when the visible cell indices change in the table.</span><br></pre></td></tr></table></figure><h3 id="Codesandbox">Codesandbox</h3><iframe src="https://codesandbox.io/embed/blueprintjs-table-infinite-scroll-7lqbx?fontsize=14&module=%2Fsrc%2FTable.js&view=preview" title="blueprintjs table infinite scroll" allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media" style="width:100%; height:600px; border:0; border-radius: 4px; overflow:hidden;" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Generally we use scroll event to detect if element reach to the threshold edge, or if you are familiar with &lt;a href=&quot;/2019/03/intersectio
      
    
    </summary>
    
    
      <category term="React" scheme="https://huboo.club/archives/category/react/"/>
    
    
      <category term="pld" scheme="https://huboo.club/archives/tag/pld/"/>
    
      <category term="react" scheme="https://huboo.club/archives/tag/react/"/>
    
      <category term="infinite-scroll" scheme="https://huboo.club/archives/tag/infinite-scroll/"/>
    
      <category term="blueprintjs" scheme="https://huboo.club/archives/tag/blueprintjs/"/>
    
  </entry>
  
  <entry>
    <title>Writing Hooks Test of React Apollo</title>
    <link href="https://huboo.club/2019/07/writing-hooks-test-of-react-apollo.html"/>
    <id>https://huboo.club/2019/07/writing-hooks-test-of-react-apollo.html</id>
    <published>2019-07-18T12:08:30.000Z</published>
    <updated>2020-01-08T09:35:00.099Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hooks">Hooks</h3><p>React introduce hooks in version 16.8.0 we don’t have to choose which type of components to use just function components.</p><blockquote class="blockquote"><p>Add Hooks — a way to use state and other React features without writing a class.</p></blockquote><p>And react-apollo@3 also introduce hooks feature to acquire data from Graphql API.</p><a id="more"></a><p>Generally we using like <a href="https://www.apollographql.com/docs/react/essentials/queries/#the-query-component" rel="external nofollow noopener noreferrer" target="_blank">this</a></p><p>On last October their <a href="https://github.com/apollographql/react-apollo/issues/2539" rel="external nofollow noopener noreferrer" target="_blank">post</a> show us a new way to use the response.</p><p>Hooks</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// filename: hooks/useDogs.js</span></span><br><span class="line"><span class="keyword">import</span> gql <span class="keyword">from</span> <span class="string">'graphql-tag'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useQuery &#125; <span class="keyword">from</span> <span class="string">'react-apollo'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> GET_DOGS = gql<span class="string">`</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    dogs &#123;</span></span><br><span class="line"><span class="string">      id</span></span><br><span class="line"><span class="string">      breed</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useDogs = <span class="function"><span class="params">()</span> =&gt;</span> useQuery(GET_DOGS);</span><br></pre></td></tr></table></figure><p>Component</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useDogs &#125; <span class="keyword">from</span> <span class="string">'hooks/useDogs'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Dogs = <span class="function">(<span class="params">&#123; onDogSelected &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; loading, error, data &#125; = useDogs();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (loading) <span class="keyword">return</span> <span class="string">'Loading...'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (error) <span class="keyword">return</span> <span class="string">`Error! <span class="subst">$&#123;error.message&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;select name=<span class="string">'dog'</span> onChange=&#123;onDogSelected&#125;&gt;</span><br><span class="line">      &#123;data.dogs.map(<span class="function"><span class="params">dog</span> =&gt;</span> (</span><br><span class="line">        &lt;option key=&#123;dog.id&#125; value=&#123;dog.breed&#125;&gt;</span><br><span class="line">          &#123;dog.breed&#125;</span><br><span class="line">        &lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">      ))&#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>select&gt;</span><br><span class="line">  )</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Well you can find lots of articles to show how to use react-apollo hooks and this one will provide you how to write your hooks’ test for custom hooks <em>useDogs</em>.</p><h3 id="Test">Test</h3><p>We are going to use <a href="https://www.npmjs.com/package/@testing-library/react-hooks" rel="external nofollow noopener noreferrer" target="_blank">react-hooks-testing-library</a> and <a href="https://www.npmjs.com/package/@apollo/react-testing" rel="external nofollow noopener noreferrer" target="_blank">react-apollo testing suite</a> to do the test please make sure the dependencies are installed.</p><p>Dependencies</p><ul><li>react: ^16.8.5</li><li>react-dom: ^16.8.5</li><li>react-apollo: ^3.0.0-beta.3</li></ul><p>devDenpendencies</p><ul><li>react-test-renderer: ^16.8.6</li><li>@apollo/react-testing: 0.1.0-beta.5</li><li>@testing-library/react-hooks: ^1.0.4</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> gql <span class="keyword">from</span> <span class="string">'graphql-tag'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; renderHook &#125; <span class="keyword">from</span> <span class="string">'@testing-library/react-hooks'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; MockedProvider &#125; <span class="keyword">from</span> <span class="string">'@apollo/react-testing'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useDogs &#125; <span class="keyword">from</span> <span class="string">'hooks/useDogs'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> GET_DOGS = gql<span class="string">`</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    dogs &#123;</span></span><br><span class="line"><span class="string">      id</span></span><br><span class="line"><span class="string">      name</span></span><br><span class="line"><span class="string">      breed</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line">describe(<span class="string">'useDogs'</span>, () =&gt; &#123;</span><br><span class="line">  it(<span class="string">'should get dogs'</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> mocks = [</span><br><span class="line">      &#123;</span><br><span class="line">        request: &#123; <span class="attr">query</span>: GET_DOGS &#125;,</span><br><span class="line">        result: &#123; <span class="attr">data</span>: &#123; <span class="attr">dogs</span>: [&#123; <span class="attr">id</span>: <span class="string">'1'</span>, <span class="attr">name</span>: <span class="string">'Buck'</span>, <span class="attr">breed</span>: <span class="string">'bulldog'</span> &#125;] &#125; &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> wrapper = <span class="function">(<span class="params">&#123; children &#125;</span>) =&gt;</span> (</span><br><span class="line">      &lt;MockedProvider mocks=&#123;mocks&#125;&gt;&#123;children&#125;&lt;<span class="regexp">/MockedProvider&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    const &#123; result, waitForNextUpdate &#125; = renderHook(() =&gt; useDogs(), &#123;</span></span><br><span class="line"><span class="regexp">      wrapper,</span></span><br><span class="line"><span class="regexp">    &#125;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    expect(result.current.loading).toBe(true);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    await waitForNextUpdate();</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    expect(result.current.data).toEqual(</span></span><br><span class="line"><span class="regexp">      expect.objectContaining(&#123;</span></span><br><span class="line"><span class="regexp">        dogs: [</span></span><br><span class="line"><span class="regexp">          &#123; id: '1', name: 'Buck', breed: 'bulldog' &#125;,</span></span><br><span class="line"><span class="regexp">        ],</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;);</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Hooks&quot;&gt;Hooks&lt;/h3&gt;
&lt;p&gt;React introduce hooks in version 16.8.0 we don’t have to choose which type of components to use just function components.&lt;/p&gt;
&lt;blockquote class=&quot;blockquote&quot;&gt;
&lt;p&gt;Add Hooks — a way to use state and other React features without writing a class.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And react-apollo@3 also introduce hooks feature to acquire data from Graphql API.&lt;/p&gt;
    
    </summary>
    
    
      <category term="React" scheme="https://huboo.club/archives/category/react/"/>
    
    
      <category term="pld" scheme="https://huboo.club/archives/tag/pld/"/>
    
      <category term="react" scheme="https://huboo.club/archives/tag/react/"/>
    
      <category term="hooks" scheme="https://huboo.club/archives/tag/hooks/"/>
    
      <category term="testing" scheme="https://huboo.club/archives/tag/testing/"/>
    
  </entry>
  
  <entry>
    <title>Applications of Intersection Observer API</title>
    <link href="https://huboo.club/2019/03/intersection-observer.html"/>
    <id>https://huboo.club/2019/03/intersection-observer.html</id>
    <published>2019-03-11T07:37:37.000Z</published>
    <updated>2020-01-22T05:40:04.637Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote"><p>The IntersectionObserver interface of the Intersection Observer API provides a way to <strong>asynchronously</strong> observe changes in the intersection of a target element with an ancestor element or with a top-level document’s viewport. The ancestor element or viewport is referred to as the root.</p></blockquote><blockquote class="blockquote"><p>When an IntersectionObserver is created, it’s configured to watch for given ratios of visibility within the root. The configuration cannot be changed once the IntersectionObserver is created, so a given observer object is only useful for watching for specific changes in degree of visibility; however, you can watch multiple target elements with the same observer.</p></blockquote><blockquote class="blockquote text-right mb-3"><p>– MDN <a href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver" rel="external nofollow noopener noreferrer" target="_blank">IntersectionObserver</a></p></blockquote><a id="more"></a><h3 id="1-Lazyload">1. Lazyload</h3><p>Traditionally we are using <em>onscroll</em> event in <em>window</em> to handle lazyload, usually lazyload image source to accelerate page loading to accomplish the concept of <a href="https://developers.google.com/web/fundamentals/performance/critical-rendering-path/" rel="external nofollow noopener noreferrer" target="_blank">Critical Rendering Path</a>. Anything not visible within the “initial view” we can lazy load it afterwards.</p><p>Here is the code snippet using IntersectionObserver API to lazyload <em>&lt;img&gt;</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">picture.lazy-image</span><br><span class="line">    source(media="(max-width: 767px)" srcset="/images/blank.gif" data-src="/images/mobile.png")</span><br><span class="line">    img(src="/images/blank.gif" data-src="/images/pc.jpg")</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lazyloader.js</span></span><br><span class="line"><span class="comment">// polyfill for non-supported browsers</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'intersection-observer'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> lazyImgs = <span class="built_in">Array</span>.from(<span class="built_in">document</span>.querySelectorAll(<span class="string">'picture.lazy-image'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> doLoad = <span class="function">(<span class="params">picture</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> srcset = picture.querySelector(<span class="string">'source'</span>)</span><br><span class="line">        <span class="keyword">const</span> img = picture.querySelector(<span class="string">'img'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (img) &#123;</span><br><span class="line">            img.setAttribute(<span class="string">'src'</span>, img.dataset.src)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (srcset) &#123;</span><br><span class="line">            srcset.setAttribute(<span class="string">'srcset'</span>, srcset.dataset.src)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        picture.classList.add(<span class="string">'lazy-image--loaded'</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> io = <span class="keyword">new</span> IntersectionObserver(<span class="function">(<span class="params">imgs, observer</span>) =&gt;</span> &#123;</span><br><span class="line">        imgs.forEach(<span class="function">(<span class="params">img</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (img.isIntersecting) &#123;</span><br><span class="line">                doLoad(img.target)</span><br><span class="line">                observer.unobserve(img.target)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    lazyImgs.forEach(<span class="function">(<span class="params">image</span>) =&gt;</span> &#123;</span><br><span class="line">        io.observe(image)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now with above snippets we can already load image source when scroll to the <em>&lt;picture&gt;</em> tag but there is an obviously FOUC(flash of unstyled content).</p><p><img src="/assets/images/page-lazyload-images-1.gif" alt="FOUC" class="img-fluid"></p><p><a href="http://davidecalignano.it/lazy-loading-with-responsive-images-and-unknown-height/" rel="external nofollow noopener noreferrer" target="_blank">check this reference blog to fix it.</a></p><p><img src="/assets/images/page-lazyload-images-2.gif" alt="Fixed FOUC" class="img-fluid"></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.lazy-image</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">110%</span>;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">img</span> &#123;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">height</span>: auto;</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">transition</span>: opacity .<span class="number">2s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;--loaded &#123;</span><br><span class="line">        <span class="selector-tag">img</span> &#123;</span><br><span class="line">            <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 class="mt-3" id="2-Sticky-Navigation-Menu-etc">2. Sticky Navigation/Menu/etc.</h3><p><em>position: sticky</em> is available in the selectors’ container if I want a <em>&lt;nav&gt;</em> always sticky in the top of the page I need to make it as the child of <em>&lt;body&gt;</em> tag or a content container, if this is not the design create a sticky navigation and put it as the child of the container and not visible until when the fixed navigation is not visible then show the sticky navigation. Still <em>onscroll</em> can do this but we are using IntersectionObserver today.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> stickyNavigation = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> nav = <span class="built_in">document</span>.querySelector(<span class="string">'nav.sticky-navigation'</span>)</span><br><span class="line">    <span class="keyword">const</span> io = <span class="keyword">new</span> IntersectionObserver(<span class="function">(<span class="params">nav</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> target = nav[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (target) &#123;</span><br><span class="line">            <span class="keyword">const</span> clientRect = target.boundingClientRect</span><br><span class="line">            <span class="keyword">const</span> root = target.rootBounds</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (clientRect.bottom &lt; root.top) &#123;</span><br><span class="line">                <span class="comment">// show the sticky navigation</span></span><br><span class="line">                nav.classList.add(<span class="string">'sticky-navigation--visible'</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (clientRect.height + clientRect.top &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// hide the sticky navigation</span></span><br><span class="line">                nav.classList.remove(<span class="string">'sticky-navigation--visible'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="comment">// observer callback will be executed when ratio reach</span></span><br><span class="line">        <span class="comment">// 0%, 25%, 50%, 75%, 100%</span></span><br><span class="line">        threshold: [<span class="number">0</span>, <span class="number">0.25</span>, <span class="number">0.5</span>, <span class="number">0.75</span>, <span class="number">1</span>]</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    io.observe(nav)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.sticky-navigation</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: sticky;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line"></span><br><span class="line">    &amp;--visible &#123;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Here are two example for using both</p><ul><li><a href="https://ebidel.github.io/demos/sticky-position-event.html" rel="external nofollow noopener noreferrer" target="_blank">https://ebidel.github.io/demos/sticky-position-event.html</a></li><li><a href="https://codepen.io/danirod/pen/preJgX" rel="external nofollow noopener noreferrer" target="_blank">https://codepen.io/danirod/pen/preJgX</a></li></ul><h3 id="Polyfill">Polyfill</h3><p>IE doesn’t support both functions so we have polyfill for:</p><ul><li><a href="https://github.com/w3c/IntersectionObserver/tree/master/polyfill" rel="external nofollow noopener noreferrer" target="_blank">IntersectionObserver</a></li><li><a href="https://github.com/wilddeer/stickyfill" rel="external nofollow noopener noreferrer" target="_blank">position: sticky</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote&quot;&gt;
&lt;p&gt;The IntersectionObserver interface of the Intersection Observer API provides a way to &lt;strong&gt;asynchronously&lt;/strong&gt; observe changes in the intersection of a target element with an ancestor element or with a top-level document’s viewport. The ancestor element or viewport is referred to as the root.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;blockquote&quot;&gt;
&lt;p&gt;When an IntersectionObserver is created, it’s configured to watch for given ratios of visibility within the root. The configuration cannot be changed once the IntersectionObserver is created, so a given observer object is only useful for watching for specific changes in degree of visibility; however, you can watch multiple target elements with the same observer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;blockquote text-right mb-3&quot;&gt;
&lt;p&gt;– MDN &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;IntersectionObserver&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="PLD" scheme="https://huboo.club/archives/category/pld/"/>
    
    
      <category term="javascript" scheme="https://huboo.club/archives/tag/javascript/"/>
    
      <category term="es6" scheme="https://huboo.club/archives/tag/es6/"/>
    
      <category term="intersection-Observer" scheme="https://huboo.club/archives/tag/intersection-observer/"/>
    
      <category term="css" scheme="https://huboo.club/archives/tag/css/"/>
    
  </entry>
  
  <entry>
    <title>Dom manipulation with pure javaScript</title>
    <link href="https://huboo.club/2019/03/dom-manipulation-without-jquery.html"/>
    <id>https://huboo.club/2019/03/dom-manipulation-without-jquery.html</id>
    <published>2019-03-04T08:24:14.000Z</published>
    <updated>2020-01-08T09:35:00.100Z</updated>
    
    <content type="html"><![CDATA[<h5 id="1-Select-dom-element">1. Select dom element</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> elCls = <span class="built_in">document</span>.querySelector(<span class="string">'.className'</span>)</span><br><span class="line"><span class="keyword">const</span> elId = <span class="built_in">document</span>.querySelector(<span class="string">'#id'</span>)</span><br><span class="line"><span class="keyword">const</span> elTag = <span class="built_in">document</span>.querySelector(<span class="string">'div'</span>)</span><br></pre></td></tr></table></figure><p><strong>querySelector</strong> only get the first occurred element discard id element only have one there are multiple of class name and tag elements.</p><h5 class="mt-5" id="2-Select-dom-elements">2. Select dom elements</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> elCls = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.className'</span>)</span><br><span class="line"><span class="keyword">const</span> elTag = <span class="built_in">document</span>.querySelectorAll(<span class="string">'div'</span>)</span><br></pre></td></tr></table></figure><p><strong>querySelectorAll</strong> will get a NodeList of elements the NodeList is like a array but <strong>forEach</strong> is not usable in IE browser, so you could use below methods to convert to an array of elements.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> els = <span class="built_in">document</span>.querySelector(<span class="string">'.className'</span>)</span><br><span class="line"><span class="built_in">Array</span>.from(els).forEach(<span class="function">(<span class="params">dom</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// dom manipulation</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.forEach.call(els, (dom) =&gt; &#123;</span><br><span class="line">  <span class="comment">// dom manipulation</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// or</span></span><br><span class="line">[].slice.call(els).forEach(<span class="function">(<span class="params">dom</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// dom manipulation</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><a id="more"></a><h5 class="mt-5" id="3-Access-dom-data-attribute">3. Access dom data attribute</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &lt;button id="submit" data-disable="false"&gt;Submit&lt;/button&gt;</span></span><br><span class="line"><span class="keyword">const</span> el = <span class="built_in">document</span>.querySelector(<span class="string">'#submit'</span>)</span><br><span class="line"><span class="keyword">const</span> isDisablle = el.dataset.disable <span class="comment">// "false"</span></span><br><span class="line"></span><br><span class="line">el.dataset.disable = <span class="literal">true</span> <span class="comment">// data-disable="true"</span></span><br></pre></td></tr></table></figure><h5 class="mt-5" id="4-Class-name-manipulation">4. Class name manipulation</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &lt;button id="submit" class="btn btn-primary"&gt;Submit&lt;/button&gt;</span></span><br><span class="line"><span class="keyword">const</span> el = <span class="built_in">document</span>.querySelector(<span class="string">'#submit'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// add class</span></span><br><span class="line">el.classList.add(<span class="string">'btn-disabled'</span>)</span><br><span class="line"><span class="comment">// remove class</span></span><br><span class="line">el.classList.remove(<span class="string">'btn-disabled'</span>)</span><br><span class="line"><span class="comment">// toggle class</span></span><br><span class="line">el.classList.toggle(<span class="string">'btn-disabled'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// check el have specific class name</span></span><br><span class="line">el.classList.contains(<span class="string">'btn-disabled'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// or toggle class with condition</span></span><br><span class="line"><span class="keyword">const</span> isDisabled = el.classList.contains(<span class="string">'btn-disabled'</span>)</span><br><span class="line">el.classList[isDisabled ? <span class="string">'remove'</span> : <span class="string">'add'</span>](<span class="string">'btn-disabled'</span>)</span><br></pre></td></tr></table></figure><h5 class="mt-5" id="5-Append-dom">5. Append dom</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cartContainer = <span class="built_in">document</span>.querySelector(<span class="string">'.cart-container'</span>)</span><br><span class="line"><span class="keyword">const</span> cart = <span class="string">'my new cart item'</span></span><br><span class="line"></span><br><span class="line">cartContainer.insertAdjacentHTML(<span class="string">'beforeend'</span>, <span class="string">`&lt;li class="cart-item"&gt;<span class="subst">$&#123;cart&#125;</span>&lt;/li&gt;`</span>)</span><br></pre></td></tr></table></figure><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML#Visualization_of_position_names" rel="external nofollow noopener noreferrer" target="_blank">Element.insertAdjacentHTML()</a></p><h5 class="mt-5" id="6-Remove-dom">6. Remove dom</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&lt;ul class="cart-container"&gt;</span></span><br><span class="line"><span class="comment">  &lt;li class="cart-item"&gt;</span></span><br><span class="line"><span class="comment">    cart A</span></span><br><span class="line"><span class="comment">  &lt;/li&gt;</span></span><br><span class="line"><span class="comment">  &lt;li class="cart-item"&gt;</span></span><br><span class="line"><span class="comment">    carr B</span></span><br><span class="line"><span class="comment">  &lt;/li&gt;</span></span><br><span class="line"><span class="comment">&lt;/ul&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// remove last item</span></span><br><span class="line"><span class="keyword">const</span> last = <span class="built_in">document</span></span><br><span class="line">  .querySelector(<span class="string">'.cart-container'</span>)</span><br><span class="line">  .querySelector(<span class="string">'.cart-item:last-child'</span>)</span><br><span class="line"></span><br><span class="line">last.parentNode.removeChild(last)</span><br></pre></td></tr></table></figure><h5 class="mt-5" id="7-Event-listening">7. Event listening</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &lt;button id="submit" data-disable="false"&gt;Submit&lt;/button&gt;</span></span><br><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">'#submit'</span>)</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">'click'</span>, (evt) =&gt; &#123;</span><br><span class="line">  evt.preventDefault()</span><br><span class="line">  evt.stopPropagation()</span><br><span class="line">  evt.stopImmediatePropagation()</span><br><span class="line"></span><br><span class="line">  btn.classList.add(<span class="string">'clicked'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// bind to multiple doms</span></span><br><span class="line"><span class="built_in">Array</span>.from(<span class="built_in">document</span>.querySelector(<span class="string">'.cart-container'</span>).querySelectorAll(<span class="string">'.cart-item-delete'</span>))</span><br><span class="line">  .forEach(<span class="function">(<span class="params">deleteBtn</span>) =&gt;</span> &#123;</span><br><span class="line">  deleteBtn.addEventListener(<span class="string">'click'</span>, (evt) =&gt; &#123;</span><br><span class="line">    evt.preventDefault()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> cartItemRow = deleteBtn.parentNode</span><br><span class="line">    cartItemRow.parentNode.removeChild(cartItemRow)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// event delegation</span></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.cart-container'</span>)</span><br><span class="line">  .addEventListener(<span class="string">'click'</span>, (evt) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (evt.target.matches(<span class="string">'.cart-item'</span>)) &#123;</span><br><span class="line">      <span class="comment">// event handler</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// event listener remove</span></span><br><span class="line"><span class="keyword">const</span> listener = <span class="function">(<span class="params">evt</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// event handler</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">'#submit'</span>)</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">'click'</span>, listener)</span><br><span class="line">btn.removeEventListener(<span class="string">'click'</span>, listener)</span><br><span class="line"></span><br><span class="line"><span class="comment">// trigger event handler</span></span><br><span class="line"><span class="keyword">const</span> event = <span class="keyword">new</span> CustomEvent(<span class="string">'click'</span>);</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="keyword">const</span> event = <span class="keyword">new</span> CustomEvent(<span class="string">'myEvt'</span>, &#123; <span class="string">'detail'</span>: elem.dataset.time &#125;)</span><br><span class="line"></span><br><span class="line">el.dispatchEvent(event)</span><br></pre></td></tr></table></figure><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill" rel="external nofollow noopener noreferrer" target="_blank">Element.matches polyfill</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events#Adding_custom_data_%E2%80%93_CustomEvent()" target="_blank" rel="noopener">Custom event and data</a></p><h5 class="mt-5" id="8-Utility-functions">8. Utility functions</h5><p><a href="https://blog.wearecolony.com/a-year-without-jquery/" rel="external nofollow noopener noreferrer" target="_blank">A Year Without jQuery - Helper Functions</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param   <span class="type">&#123;Element&#125;</span>       <span class="variable">el</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param   <span class="type">&#123;string&#125;</span>        <span class="variable">selector</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param   <span class="type">&#123;boolean&#125;</span>       </span>[includeSelf]</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return  <span class="type">&#123;Element|null&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">h.closestParent = <span class="function"><span class="keyword">function</span>(<span class="params">el, selector, includeSelf</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> parent = el.parentNode;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (includeSelf &amp;&amp; el.matches(selector)) &#123;</span><br><span class="line">        <span class="keyword">return</span> el;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (parent &amp;&amp; parent !== <span class="built_in">document</span>.body) &#123;</span><br><span class="line">        <span class="keyword">if</span> (parent.matches &amp;&amp; parent.matches(selector)) &#123;</span><br><span class="line">            <span class="keyword">return</span> parent;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (parent.parentNode) &#123;</span><br><span class="line">            parent = parent.parentNode;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;1-Select-dom-element&quot;&gt;1. Select dom element&lt;/h5&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; elCls = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.className&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; elId = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#id&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; elTag = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;querySelector&lt;/strong&gt; only get the first occurred element discard id element only have one there are multiple of class name and tag elements.&lt;/p&gt;
&lt;h5 class=&quot;mt-5&quot; id=&quot;2-Select-dom-elements&quot;&gt;2. Select dom elements&lt;/h5&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; elCls = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(&lt;span class=&quot;string&quot;&gt;&#39;.className&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; elTag = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;querySelectorAll&lt;/strong&gt; will get a NodeList of elements the NodeList is like a array but &lt;strong&gt;forEach&lt;/strong&gt; is not usable in IE browser, so you could use below methods to convert to an array of elements.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; els = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.className&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.from(els).forEach(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;dom&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// dom manipulation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.prototype.forEach.call(els, (dom) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// dom manipulation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[].slice.call(els).forEach(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;dom&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// dom manipulation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="PLD" scheme="https://huboo.club/archives/category/pld/"/>
    
    
      <category term="jquery" scheme="https://huboo.club/archives/tag/jquery/"/>
    
      <category term="javascript" scheme="https://huboo.club/archives/tag/javascript/"/>
    
      <category term="dom" scheme="https://huboo.club/archives/tag/dom/"/>
    
      <category term="es6" scheme="https://huboo.club/archives/tag/es6/"/>
    
  </entry>
  
  <entry>
    <title>Install Latest LTS Nodejs on Ubuntu</title>
    <link href="https://huboo.club/2019/03/node-install-ubuntu.html"/>
    <id>https://huboo.club/2019/03/node-install-ubuntu.html</id>
    <published>2019-03-01T09:08:54.000Z</published>
    <updated>2020-01-08T09:38:12.730Z</updated>
    
    <content type="html"><![CDATA[<p>On a Ubuntu LTS environment usually when you use <strong>apt-get install nodejs</strong> you’ll get 6.x version of node, if you want to install the latest LTS version of nodejs and don’t want to compile from the source, here is the instruction.</p><h3 id="Installing-Node-js-10-x-LTS-on-Ubuntu-and-Debian">Installing Node.js 10.x LTS on Ubuntu and Debian</h3><p><a href="https://github.com/nodesource/distributions/blob/master/README.md" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://github.com/nodesource/distributions/raw/master/images/nsolid-logo-dark.svg?sanitize=true" alt="nodeSource"></a></p><p class="mb-0 mt-3">Follow the install instructions of section <strong>Debian and Ubuntu</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure><p class="mb-0 mt-3">You will install the latest LTS 10.x version of nodejs, this is the upgrade but if you need to downgrade it please uninstall</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove -y nodejs</span><br></pre></td></tr></table></figure><p class="mb-0 mt-3">before change the install version</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure><p class="mb-3"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;On a Ubuntu LTS environment usually when you use &lt;strong&gt;apt-get install nodejs&lt;/strong&gt; you’ll get 6.x version of node, if you want to i
      
    
    </summary>
    
    
      <category term="PLD" scheme="https://huboo.club/archives/category/pld/"/>
    
    
      <category term="ubuntu" scheme="https://huboo.club/archives/tag/ubuntu/"/>
    
      <category term="nodejs" scheme="https://huboo.club/archives/tag/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Auto Issue Your Domain SSL by acme.sh</title>
    <link href="https://huboo.club/2019/02/acme.sh-auto-issue-ssl.html"/>
    <id>https://huboo.club/2019/02/acme.sh-auto-issue-ssl.html</id>
    <published>2019-02-28T10:00:00.000Z</published>
    <updated>2020-01-22T05:48:40.381Z</updated>
    
    <content type="html"><![CDATA[<h6 id="Fri-Mar-1-17-54-57-CST-2019">Fri Mar 1 17:54:57 CST 2019</h6><p><a href="https://github.com/Neilpang/acme.sh" rel="external nofollow noopener noreferrer" target="_blank">acme.sh</a></p><p><a href="https://github.com/Neilpang/acme.sh/wiki" rel="external nofollow noopener noreferrer" target="_blank">acme.sh wiki</a></p><p><a href="https://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E" rel="external nofollow noopener noreferrer" target="_blank">中文教程</a></p><h3 id="Issue-a-SSL-cert-from-Let’s-Encrypt">Issue a SSL cert from Let’s Encrypt</h3><h3 id="Install-cert-to-your-site">Install cert to your site</h3><h3 id="Make-it-auto-updated">Make it auto updated</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;Fri-Mar-1-17-54-57-CST-2019&quot;&gt;Fri Mar 1 17:54:57 CST 2019&lt;/h6&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Neilpang/acme.sh&quot; rel=&quot;external nofollo
      
    
    </summary>
    
    
      <category term="SSL" scheme="https://huboo.club/archives/category/ssl/"/>
    
    
      <category term="ubuntu" scheme="https://huboo.club/archives/tag/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Integrate Frontend Build Tasks into Maven</title>
    <link href="https://huboo.club/2019/01/maven-integrate-frontend-build-tasks.html"/>
    <id>https://huboo.club/2019/01/maven-integrate-frontend-build-tasks.html</id>
    <published>2019-01-29T08:24:23.000Z</published>
    <updated>2020-01-03T06:34:36.705Z</updated>
    
    <content type="html"><![CDATA[<p>Sometimes when build a maven project you also want frontend resources are built along with whole build process, here is the solution.</p><h3 id="TL-DR">TL;DR</h3><ul><li>Apache Maven 3.3.9</li><li>Plugin: frontend-maven-plugin 1.6</li><li>A pom.xml profile (e.g. for an AEM project)</li><li>Build command add the profile before other profiles</li><li>Check console if the gulp task is run successfully</li></ul><a id="more"></a><h2 id="Longer-version">Longer version</h2><p>Make sure you have the right version of maven and plugin then add the configure into your pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>buildPLD<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.eirslett<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>frontend-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">workingDirectory</span>&gt;</span>folder/of/frontend/src/with/gulp/tasks<span class="tag">&lt;/<span class="name">workingDirectory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- install node and yarn --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>install node and yarn<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>install-node-and-yarn<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>generate-resources<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">nodeVersion</span>&gt;</span>v10.0.0<span class="tag">&lt;/<span class="name">nodeVersion</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">yarnVersion</span>&gt;</span>v1.13.0<span class="tag">&lt;/<span class="name">yarnVersion</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- install package.json dependencies --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>run yarn install<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">arguments</span>&gt;</span>install<span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- run gulp task --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>run gulp<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">arguments</span>&gt;</span>run deploy<span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Command">Command</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install -P buildPLD</span><br></pre></td></tr></table></figure><h3 id="Console">Console</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[INFO] --- frontend-maven-plugin:1.6:install-node-and-yarn (install node and yarn) @ apps ---</span><br><span class="line">[INFO] Node v10.0.0 is already installed.</span><br><span class="line">[INFO] Yarn 1.13.0 is already installed.</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- frontend-maven-plugin:1.6:yarn (run yarn install) @ apps ---</span><br><span class="line">[INFO] Running &#39;yarn install&#39; in folder&#x2F;of&#x2F;frontend&#x2F;src&#x2F;with&#x2F;gulp&#x2F;tasks</span><br><span class="line">[INFO] yarn install v1.13.0</span><br><span class="line">[INFO] [1&#x2F;4] Resolving packages...</span><br><span class="line">[INFO] success Already up-to-date.</span><br><span class="line">[INFO] Done in 0.74s.</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- frontend-maven-plugin:1.6:yarn (run gulp) @ apps ---</span><br><span class="line">[INFO] Running &#39;yarn run deploy&#39; in folder&#x2F;of&#x2F;frontend&#x2F;src&#x2F;with&#x2F;gulp&#x2F;tasks</span><br><span class="line">[INFO] yarn run v1.13.0</span><br><span class="line">[INFO] $ gulp build --require @babel&#x2F;register --gulpfile gulp-tasks</span><br></pre></td></tr></table></figure><p>Here you can see console logs out specific version of Node and Yarn is installed but for the first time you run it the plugin will download specific version of node and yarn and install to your ${workingDirectory}/node, this is happened in the first execution section. The other two execution sections are mainly for download task dependencies and run specific task and you can see the last line of log the gulp task is running.</p><h4 id="Done">Done.</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sometimes when build a maven project you also want frontend resources are built along with whole build process, here is the solution.&lt;/p&gt;
&lt;h3 id=&quot;TL-DR&quot;&gt;TL;DR&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Apache Maven 3.3.9&lt;/li&gt;
&lt;li&gt;Plugin: frontend-maven-plugin 1.6&lt;/li&gt;
&lt;li&gt;A pom.xml profile (e.g. for an AEM project)&lt;/li&gt;
&lt;li&gt;Build command add the profile before other profiles&lt;/li&gt;
&lt;li&gt;Check console if the gulp task is run successfully&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Integration" scheme="https://huboo.club/archives/category/integration/"/>
    
    
      <category term="pld" scheme="https://huboo.club/archives/tag/pld/"/>
    
      <category term="maven" scheme="https://huboo.club/archives/tag/maven/"/>
    
  </entry>
  
  <entry>
    <title>PLD Troubleshooting</title>
    <link href="https://huboo.club/2019/01/pld-troubleshooting.html"/>
    <id>https://huboo.club/2019/01/pld-troubleshooting.html</id>
    <published>2019-01-22T08:47:00.000Z</published>
    <updated>2020-01-08T09:27:08.022Z</updated>
    
    <content type="html"><![CDATA[<h6 id="Tue-Jan-22-17-33-22-CST-2019">Tue Jan 22 17:33:22 CST 2019</h6><h3 id="IE">IE</h3><ul><li><p>Remove the clear cross icon in input</p>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">selector</span><span class="selector-pseudo">::-ms-clear</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Image is displayed in other browsers except IE</p><p>E.g. a .png extension image shown in Chrome but not shown in IE, when open it directly in IE also display a red cross. You should check the image is really a png image by using <a href="http://www.checkfiletype.com/" rel="external nofollow noopener noreferrer" target="_blank">CheckFileType.com</a> and rename it then both in page and direct will show.</p></li></ul><a id="more"></a><h3 id="iOS-Safari">iOS Safari</h3><ul><li><p>Input has inner shadow</p>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">selector</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-appearance</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Non &lt;a&gt; or &lt;button&gt; tag does’t response the click event</p>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">selector</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;Tue-Jan-22-17-33-22-CST-2019&quot;&gt;Tue Jan 22 17:33:22 CST 2019&lt;/h6&gt;
&lt;h3 id=&quot;IE&quot;&gt;IE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Remove the clear cross icon in input&lt;/p&gt;
  &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::-ms-clear&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Image is displayed in other browsers except IE&lt;/p&gt;
&lt;p&gt;E.g. a .png extension image shown in Chrome but not shown in IE, when open it directly in IE also display a red cross. You should check the image is really a png image by using &lt;a href=&quot;http://www.checkfiletype.com/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;CheckFileType.com&lt;/a&gt; and rename it then both in page and direct will show.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="PLD" scheme="https://huboo.club/archives/category/pld/"/>
    
    
      <category term="pld" scheme="https://huboo.club/archives/tag/pld/"/>
    
      <category term="tricks" scheme="https://huboo.club/archives/tag/tricks/"/>
    
  </entry>
  
  <entry>
    <title>Bookmarks of Frontend(PLD) Related</title>
    <link href="https://huboo.club/2018/11/bookmarks.html"/>
    <id>https://huboo.club/2018/11/bookmarks.html</id>
    <published>2018-11-27T07:33:00.000Z</published>
    <updated>2020-01-19T07:54:54.133Z</updated>
    
    <content type="html"><![CDATA[<p class="mb-0">Foundation</p><ul><li><a href="https://code.visualstudio.com/" rel="external nofollow noopener noreferrer" target="_blank">VS Code</a></li><li><a href="http://codeguide.co/" rel="external nofollow noopener noreferrer" target="_blank">Code guide</a></li><li><a href="https://editorconfig.org/" rel="external nofollow noopener noreferrer" target="_blank">EditorConfig</a></li></ul><a id="more"></a><p class="mb-0">Apps</p><ul><li><a href="http://fontello.com/" rel="external nofollow noopener noreferrer" target="_blank">Fontello - icon fonts generator</a></li><li><a href="https://icomoon.io/app/" rel="external nofollow noopener noreferrer" target="_blank">IcoMoon App - Icon Font, SVG, PDF &amp; PNG Generator</a></li><li><a href="https://glyphter.com/" rel="external nofollow noopener noreferrer" target="_blank">The SVG Font Machine</a></li><li><a href="https://regexr.com/" rel="external nofollow noopener noreferrer" target="_blank">RegExr: Learn, Build, &amp; Test RegEx</a></li><li><a href="http://paletton.com/" rel="external nofollow noopener noreferrer" target="_blank">Paletton - The Color Scheme Designer</a></li><li><a href="https://loading.io/" rel="external nofollow noopener noreferrer" target="_blank">loading.io - Your SVG + GIF + PNG Ajax Loading Icons</a></li><li><a href="https://dillinger.io/" rel="external nofollow noopener noreferrer" target="_blank">Online Markdown Editor - Dillinger, the Last Markdown Editor ever.</a></li><li><a href="https://mosaico.io/" rel="external nofollow noopener noreferrer" target="_blank">Free email template builder - Responsive mail editor and designer</a></li><li><a href="https://randomuser.me/" rel="external nofollow noopener noreferrer" target="_blank">Random User Generator</a></li><li><a href="http://keycode.info/" rel="external nofollow noopener noreferrer" target="_blank">JavaScript Event KeyCodes</a></li><li><a href="https://www.lipsum.com/" rel="external nofollow noopener noreferrer" target="_blank">Lorem Ipsum - All the facts - Lipsum generator</a></li><li><a href="https://www.lastpass.com/password-generator" rel="external nofollow noopener noreferrer" target="_blank">Password Generator</a></li><li><a href="https://dopiaza.org/tools/datauri/index.php" rel="external nofollow noopener noreferrer" target="_blank">data: URI Generator</a></li><li><a href="http://cssanimate.com/" rel="external nofollow noopener noreferrer" target="_blank">CSS3 Keyframes Animation Generator</a></li><li><a href="http://www.checkfiletype.com/" rel="external nofollow noopener noreferrer" target="_blank">CheckFileType.com</a></li><li><a href="http://danilowoz.com/create-content-loader/" rel="external nofollow noopener noreferrer" target="_blank">Create React Content Loader</a></li><li><a href="http://microsoft.github.io/TypeSearch/" rel="external nofollow noopener noreferrer" target="_blank">TypeScript Types Search</a></li><li><a href="https://favicon.io/" rel="external nofollow noopener noreferrer" target="_blank">The ultimate favicon generator</a></li><li><a href="https://www.svgbackgrounds.com/" rel="external nofollow noopener noreferrer" target="_blank">SVG Backgrounds</a></li></ul><p class="mb-0">Cheat Sheets</p><ul><li><a href="https://devhints.io/" rel="external nofollow noopener noreferrer" target="_blank">Devhints — TL;DR for developer documentation</a></li><li><a href="https://easings.net/" rel="external nofollow noopener noreferrer" target="_blank">Easing functions</a></li></ul><p class="mb-0">Miscs</p><ul><li><p><a href="https://www.caniuse.com/" rel="external nofollow noopener noreferrer" target="_blank">Can I use</a></p></li><li><p><a href="http://browserhacks.com/" rel="external nofollow noopener noreferrer" target="_blank">Browserhacks</a></p></li><li><p><a href="https://mediaqueri.es/" rel="external nofollow noopener noreferrer" target="_blank">Media Queries</a></p></li><li><p><a href="https://www.freeformatter.com/html-entities.html" rel="external nofollow noopener noreferrer" target="_blank">HTML Entity List</a></p></li><li><p><a href="https://dev.w3.org/html5/html-author/charref" rel="external nofollow noopener noreferrer" target="_blank">Character Entity Reference Chart</a></p></li><li><p><a href="https://unicode-table.com/" rel="external nofollow noopener noreferrer" target="_blank">Control character — Unicode® character table</a></p></li><li><p><a href="https://unpkg.com/" rel="external nofollow noopener noreferrer" target="_blank">UNPKG</a></p></li></ul><p class="mb-0">Plugins</p><ul><li>Carousels<ul><li><a href="http://idangero.us/swiper/" rel="external nofollow noopener noreferrer" target="_blank">Swiper</a></li><li><a href="http://kenwheeler.github.io/slick/" rel="external nofollow noopener noreferrer" target="_blank">Slick</a></li></ul></li><li>Form Validator<ul><li><a href="http://parsleyjs.org/" rel="external nofollow noopener noreferrer" target="_blank">Parsley</a></li><li><a href="http://1000hz.github.io/bootstrap-validator/" rel="external nofollow noopener noreferrer" target="_blank">Validator</a></li></ul></li><li><a href="https://mottie.github.io/Keyboard/" rel="external nofollow noopener noreferrer" target="_blank">Virtual Keyboard</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;mb-0&quot;&gt;Foundation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;VS Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://codeguide.co/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Code guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://editorconfig.org/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;EditorConfig&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Bookmarks" scheme="https://huboo.club/archives/category/bookmarks/"/>
    
    
      <category term="pld" scheme="https://huboo.club/archives/tag/pld/"/>
    
      <category term="resource" scheme="https://huboo.club/archives/tag/resource/"/>
    
  </entry>
  
</feed>
